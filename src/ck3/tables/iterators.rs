use std::sync::LazyLock;

use crate::helpers::TigerHashMap;
use crate::scopes::Scopes;

#[inline]
pub fn iterator(name: &str) -> Option<(Scopes, Scopes)> {
    ITERATOR_MAP.get(name).copied()
}

static ITERATOR_MAP: LazyLock<TigerHashMap<&'static str, (Scopes, Scopes)>> = LazyLock::new(|| {
    let mut hash = TigerHashMap::default();
    for (from, s, to) in ITERATOR.iter().copied() {
        hash.insert(s, (from, to));
    }
    hash
});

/// LAST UPDATED CK3 VERSION 1.16.0
/// See `effects.log` from the game data dumps
/// These are the list iterators. Every entry represents
/// a every_, ordered_, random_, and any_ version.
const ITERATOR: &[(Scopes, &str, Scopes)] = &[
    (Scopes::Character, "acclaimed_knight", Scopes::Character),
    (Scopes::Character, "accolade", Scopes::Accolade),
    (Scopes::None, "accolade_type", Scopes::AccoladeType),
    (Scopes::Character, "active_accolade", Scopes::Accolade),
    (Scopes::None, "activity", Scopes::Activity),
    (Scopes::Activity, "activity_phase_location", Scopes::Province),
    (Scopes::Activity, "activity_phase_location_future", Scopes::Province),
    (Scopes::Activity, "activity_phase_location_past", Scopes::Province),
    (Scopes::None, "activity_type", Scopes::ActivityType),
    (Scopes::Character, "alert_creatable_title", Scopes::LandedTitle),
    (Scopes::Character, "alert_usurpable_title", Scopes::LandedTitle),
    (Scopes::Character, "ally", Scopes::Character),
    (Scopes::Character, "ancestor", Scopes::Character),
    (Scopes::Character, "army", Scopes::Army),
    (Scopes::Province, "army_in_location", Scopes::Army),
    (Scopes::Army, "army_maa_regiment", Scopes::Regiment),
    (Scopes::None, "artifact", Scopes::Artifact),
    (Scopes::Artifact, "artifact_claimant", Scopes::Character),
    (Scopes::Artifact, "artifact_house_claimant", Scopes::DynastyHouse),
    (Scopes::Activity, "attending_character", Scopes::Character),
    (Scopes::Character, "available_task_contract", Scopes::TaskContract),
    (Scopes::None, "barony", Scopes::LandedTitle),
    (Scopes::None, "casus_belli_type", Scopes::CasusBelliType),
    (Scopes::Character, "character_active_contract", Scopes::TaskContract),
    (Scopes::Character, "character_artifact", Scopes::Artifact),
    (Scopes::Character, "character_epidemic", Scopes::Epidemic),
    (Scopes::Province, "character_in_location", Scopes::Character),
    (Scopes::Character, "character_situation", Scopes::Situation),
    (Scopes::Character, "character_struggle", Scopes::Struggle),
    (Scopes::Character, "character_task_contract", Scopes::TaskContract),
    (
        Scopes::Character,
        "character_to_title_neighboring_and_across_water_county",
        Scopes::LandedTitle,
    ),
    (
        Scopes::Character,
        "character_to_title_neighboring_and_across_water_duchy",
        Scopes::LandedTitle,
    ),
    (
        Scopes::Character,
        "character_to_title_neighboring_and_across_water_empire",
        Scopes::LandedTitle,
    ),
    (
        Scopes::Character,
        "character_to_title_neighboring_and_across_water_kingdom",
        Scopes::LandedTitle,
    ),
    (Scopes::Character, "character_to_title_neighboring_county", Scopes::LandedTitle),
    (Scopes::Character, "character_to_title_neighboring_duchy", Scopes::LandedTitle),
    (Scopes::Character, "character_to_title_neighboring_empire", Scopes::LandedTitle),
    (Scopes::Character, "character_to_title_neighboring_kingdom", Scopes::LandedTitle),
    (Scopes::Character, "character_trait", Scopes::Trait),
    (Scopes::Character, "character_war", Scopes::War),
    (Scopes::None, "character_with_royal_court", Scopes::Character),
    (Scopes::Character, "child", Scopes::Character),
    (Scopes::Character, "claim", Scopes::LandedTitle),
    (Scopes::LandedTitle, "claimant", Scopes::Character),
    (Scopes::Character, "claimed_artifact", Scopes::Artifact),
    (Scopes::Character, "close_family_member", Scopes::Character),
    (Scopes::Character, "close_or_extended_family_member", Scopes::Character),
    (Scopes::Combat, "combat_side", Scopes::CombatSide),
    (Scopes::None, "completed_legend", Scopes::Legend),
    (Scopes::Character, "concubine", Scopes::Character),
    (Scopes::Confederation, "confederation_member", Scopes::Character),
    (Scopes::LandedTitle, "connected_county", Scopes::LandedTitle),
    (Scopes::Character, "consort", Scopes::Character),
    (Scopes::Character, "contact", Scopes::Character),
    (Scopes::LandedTitle, "controlled_faith", Scopes::Faith),
    (Scopes::LandedTitle, "controlled_title_maa_regiment", Scopes::Regiment),
    (Scopes::Character, "councillor", Scopes::Character),
    (Scopes::None, "county", Scopes::LandedTitle),
    (Scopes::None, "county_in_region", Scopes::LandedTitle),
    (Scopes::LandedTitle, "county_province", Scopes::Province),
    (Scopes::LandedTitle, "county_situation", Scopes::Situation),
    (Scopes::LandedTitle, "county_situation_sub_region", Scopes::SituationSubRegion),
    (Scopes::LandedTitle, "county_struggle", Scopes::Struggle),
    (Scopes::Character, "court_position_candidate", Scopes::Character),
    (Scopes::Character, "court_position_employer", Scopes::Character),
    (Scopes::Character, "court_position_holder", Scopes::Character), // TODO find out how court position is supplied
    (Scopes::None, "court_position_type", Scopes::CourtPositionType),
    (Scopes::Character, "courtier", Scopes::Character),
    (Scopes::Character, "courtier_away", Scopes::Character),
    (Scopes::Character, "courtier_or_guest", Scopes::Character),
    (Scopes::Culture, "culture_county", Scopes::LandedTitle),
    (Scopes::Culture, "culture_duchy", Scopes::LandedTitle),
    (Scopes::Culture, "culture_empire", Scopes::LandedTitle),
    (Scopes::None, "culture_global", Scopes::Culture),
    (Scopes::Culture, "culture_kingdom", Scopes::LandedTitle),
    (Scopes::None, "culture_pillar", Scopes::CulturePillar),
    (Scopes::None, "culture_tradition", Scopes::CultureTradition),
    (Scopes::Character, "de_jure_claim", Scopes::LandedTitle),
    (Scopes::LandedTitle, "de_jure_county", Scopes::LandedTitle),
    (Scopes::LandedTitle, "de_jure_county_holder", Scopes::Character),
    (Scopes::LandedTitle, "de_jure_top_liege", Scopes::Character),
    (Scopes::None, "decision", Scopes::Decision),
    (Scopes::Faith, "defensive_great_holy_wars", Scopes::GreatHolyWar),
    (Scopes::LandedTitle, "dejure_vassal_title_holder", Scopes::Character),
    (Scopes::Character, "diarchy_succession_character", Scopes::Character),
    (Scopes::Character, "diplomacy_councillor", Scopes::Character),
    (Scopes::LandedTitle, "direct_de_facto_vassal_title", Scopes::LandedTitle),
    (Scopes::LandedTitle, "direct_de_jure_vassal_title", Scopes::LandedTitle),
    (Scopes::Character, "directly_owned_province", Scopes::Province),
    (Scopes::None, "doctrine", Scopes::Doctrine),
    (Scopes::None, "domicile", Scopes::Domicile),
    (Scopes::None, "duchy", Scopes::LandedTitle),
    (Scopes::Dynasty, "dynasty_member", Scopes::Character),
    (Scopes::LandedTitle, "election_candidate", Scopes::Character),
    (Scopes::Character, "election_title", Scopes::LandedTitle),
    (Scopes::LandedTitle, "elector", Scopes::Character),
    (Scopes::None, "empire", Scopes::LandedTitle),
    (Scopes::TravelPlan, "entourage_character", Scopes::Character),
    (Scopes::None, "epidemic", Scopes::Epidemic),
    (Scopes::None, "epidemic_type", Scopes::EpidemicType),
    (Scopes::Character, "equipped_character_artifact", Scopes::Artifact),
    (Scopes::Character, "extended_family_member", Scopes::Character),
    (Scopes::Faction, "faction_county_member", Scopes::LandedTitle),
    (Scopes::Faction, "faction_member", Scopes::Character),
    (Scopes::Religion, "faith", Scopes::Faith),
    (Scopes::Faith, "faith_character", Scopes::Character),
    (Scopes::Faith, "faith_holy_order", Scopes::HolyOrder),
    (Scopes::Faith, "faith_playable_ruler", Scopes::Character),
    (Scopes::Faith, "faith_ruler", Scopes::Character),
    (Scopes::Character, "foreign_court_guest", Scopes::Character),
    (Scopes::Character, "former_concubine", Scopes::Character),
    (Scopes::Character, "former_concubinist", Scopes::Character),
    (Scopes::Character, "former_spouse", Scopes::Character),
    (Scopes::TravelPlan, "future_path_location", Scopes::Province),
    (Scopes::Character, "general_councillor", Scopes::Character),
    (Scopes::None, "geographical_region", Scopes::GeographicalRegion),
    (Scopes::Character, "government_type", Scopes::GovernmentType),
    (Scopes::Activity, "guest_subset", Scopes::Character),
    (Scopes::Activity, "guest_subset_current_phase", Scopes::Character),
    (Scopes::Character, "heir", Scopes::Character),
    (Scopes::Character, "heir_title", Scopes::LandedTitle),
    (Scopes::Character, "held_title", Scopes::LandedTitle),
    (Scopes::Character, "hired_mercenary", Scopes::MercenaryCompany),
    (Scopes::None, "holding_type", Scopes::HoldingType),
    (Scopes::Faith, "holy_site", Scopes::LandedTitle),
    (Scopes::Character, "home_court_hostage", Scopes::Character),
    (Scopes::Character, "hooked_character", Scopes::Character),
    (Scopes::Character, "hostile_raider", Scopes::Character),
    (Scopes::DynastyHouse, "house_claimed_artifact", Scopes::Artifact),
    (Scopes::DynastyHouse, "house_member", Scopes::Character),
    (Scopes::DynastyHouse, "house_unity_member", Scopes::Character),
    (Scopes::None, "important_location", Scopes::LandedTitle),
    (Scopes::LandedTitle, "important_location_for_title", Scopes::LandedTitle),
    (Scopes::LandedTitle, "in_de_facto_hierarchy", Scopes::LandedTitle),
    (Scopes::LandedTitle, "in_de_jure_hierarchy", Scopes::LandedTitle),
    (Scopes::None, "in_global_list", Scopes::all()),
    (Scopes::None, "in_list", Scopes::all()),
    (Scopes::None, "in_local_list", Scopes::all()),
    (Scopes::None, "independent_ruler", Scopes::Character),
    (Scopes::Epidemic, "infected_province", Scopes::Province),
    (Scopes::None, "inspiration", Scopes::Inspiration),
    (Scopes::None, "inspired_character", Scopes::Character),
    (Scopes::None, "interested_title", Scopes::LandedTitle),
    (Scopes::Struggle, "interloper_ruler", Scopes::Character),
    (Scopes::Character, "intrigue_councillor", Scopes::Character),
    (Scopes::Character, "invited_activity", Scopes::Activity),
    (Scopes::Activity, "invited_character", Scopes::Character),
    (Scopes::Struggle, "involved_county", Scopes::LandedTitle),
    (Scopes::Struggle, "involved_ruler", Scopes::Character),
    (Scopes::Character.union(Scopes::Artifact), "killed_character", Scopes::Character),
    (Scopes::None, "kingdom", Scopes::LandedTitle),
    (Scopes::Character, "knight", Scopes::Character),
    (Scopes::Character, "known_secret", Scopes::Secret),
    (Scopes::Character, "land_neighboring_realm_with_tributaries", Scopes::LandedTitle),
    (Scopes::Character, "land_neighboring_realm_with_tributaries_owner", Scopes::Character),
    (Scopes::Character, "learning_councillor", Scopes::Character),
    (Scopes::HolyOrder, "leased_title", Scopes::LandedTitle),
    (Scopes::None, "legend", Scopes::Legend),
    (Scopes::Legend, "legend_promoter", Scopes::Character),
    (Scopes::None, "legend_type", Scopes::LegendType),
    (Scopes::Character, "liege_or_above", Scopes::Character),
    (Scopes::None, "living_character", Scopes::Character),
    (Scopes::Character, "maa_regiment", Scopes::Regiment),
    (Scopes::Character, "martial_councillor", Scopes::Character),
    (Scopes::None, "mercenary_company", Scopes::MercenaryCompany),
    (Scopes::Character, "memory", Scopes::CharacterMemory),
    (Scopes::CharacterMemory, "memory_participant", Scopes::Character),
    (Scopes::Character, "neighboring_and_across_water_realm_same_rank_owner", Scopes::Character),
    (Scopes::Character, "neighboring_and_across_water_top_liege_realm", Scopes::LandedTitle),
    (Scopes::Character, "neighboring_and_across_water_top_liege_realm_owner", Scopes::Character),
    (Scopes::Character, "neighboring_and_across_water_top_suzerain_realm", Scopes::LandedTitle),
    (Scopes::Character, "neighboring_and_across_water_top_suzerain_realm_owner", Scopes::Character),
    (Scopes::LandedTitle, "neighboring_county", Scopes::LandedTitle),
    (Scopes::Province, "neighboring_province", Scopes::Province),
    (Scopes::Character, "neighboring_realm_same_rank_owner", Scopes::Character),
    (Scopes::Character, "neighboring_top_liege_realm", Scopes::LandedTitle),
    (Scopes::Character, "neighboring_top_liege_realm_owner", Scopes::Character),
    (Scopes::Character, "neighboring_top_suzerain_realm", Scopes::LandedTitle),
    (Scopes::Character, "neighboring_top_suzerain_realm_owner", Scopes::Character),
    (Scopes::Character, "noble_family", Scopes::LandedTitle),
    (Scopes::None, "open_invite_activity", Scopes::Activity),
    (Scopes::Character, "opposite_sex_spouse_candidate", Scopes::Character),
    (Scopes::Trait, "opposite_trait", Scopes::Trait),
    (Scopes::Character, "owned_story", Scopes::StoryCycle),
    (Scopes::LandedTitle, "owned_title_maa_regiment", Scopes::Regiment),
    (Scopes::Character, "parent", Scopes::Character),
    (Scopes::Culture, "parent_culture", Scopes::Culture),
    (Scopes::Culture, "parent_culture_or_above", Scopes::Culture),
    (Scopes::Situation, "participant_group", Scopes::SituationParticipantGroup),
    (Scopes::LandedTitle, "past_holder", Scopes::Character),
    (Scopes::LandedTitle, "past_holder_reversed", Scopes::Character),
    (Scopes::Character, "patroned_holy_order", Scopes::HolyOrder),
    (Scopes::Character, "personal_claimed_artifact", Scopes::Artifact),
    (Scopes::Character, "pinned_character", Scopes::Character),
    (Scopes::Character, "pinning_character", Scopes::Character),
    (Scopes::Character, "played_character", Scopes::Character),
    (Scopes::None, "player", Scopes::Character),
    (Scopes::Character, "player_heir", Scopes::Character),
    (Scopes::Character, "player_legend_library", Scopes::Legend),
    (Scopes::GreatHolyWar, "pledged_attacker", Scopes::Character),
    (Scopes::GreatHolyWar, "pledged_defender", Scopes::Character),
    (Scopes::None, "pool_character", Scopes::Character),
    (Scopes::Character, "pool_guest", Scopes::Character),
    (Scopes::Character, "potential_marriage_option", Scopes::Character),
    (Scopes::Character, "powerful_family", Scopes::DynastyHouse),
    (Scopes::Character, "powerful_vassal", Scopes::Character),
    (Scopes::Character, "pretender_title", Scopes::LandedTitle),
    (Scopes::Character, "primary_war_enemy", Scopes::Character),
    (Scopes::Character, "prisoner", Scopes::Character),
    (Scopes::None, "province", Scopes::Province),
    (Scopes::Province, "province_domicile", Scopes::Domicile),
    (Scopes::Province, "province_epidemic", Scopes::Epidemic),
    (Scopes::Province, "province_legend", Scopes::Legend),
    (Scopes::Character, "prowess_councillor", Scopes::Character),
    (Scopes::Character, "raid_target", Scopes::Character),
    (Scopes::Character, "realm_border_county", Scopes::LandedTitle),
    (Scopes::Character, "realm_county", Scopes::LandedTitle),
    (Scopes::Character, "realm_de_jure_duchy", Scopes::LandedTitle),
    (Scopes::Character, "realm_de_jure_empire", Scopes::LandedTitle),
    (Scopes::Character, "realm_de_jure_kingdom", Scopes::LandedTitle),
    (Scopes::Character, "realm_province", Scopes::Province),
    (Scopes::Character, "relation", Scopes::Character), // TODO takes a type
    (Scopes::None, "religion_global", Scopes::Religion),
    (Scopes::HoldingType, "required_heir_government_type", Scopes::GovernmentType),
    (Scopes::None, "ruler", Scopes::Character),
    (Scopes::Character, "same_sex_spouse_candidate", Scopes::Character),
    (Scopes::Character, "scheme", Scopes::Scheme),
    (Scopes::Scheme, "scheme_agent_character", Scopes::Character),
    (Scopes::Scheme, "scheme_agent_slot", Scopes::AgentSlot),
    (Scopes::Character, "secret", Scopes::Secret),
    (Scopes::Secret, "secret_knower", Scopes::Character),
    (Scopes::Secret, "secret_participant", Scopes::Character),
    (Scopes::Character, "sibling", Scopes::Character),
    (Scopes::CombatSide, "side_commander", Scopes::Character),
    (Scopes::CombatSide, "side_knight", Scopes::Character),
    (Scopes::CombatSide, "side_participant", Scopes::Character),
    (Scopes::Situation, "situation_county", Scopes::LandedTitle),
    (Scopes::Situation, "situation_participant", Scopes::Character),
    (Scopes::Situation, "situation_sub_region", Scopes::SituationSubRegion),
    (Scopes::SituationParticipantGroup, "situation_group_participant", Scopes::Character),
    (Scopes::SituationSubRegion, "situation_sub_region_county", Scopes::LandedTitle),
    (
        Scopes::SituationSubRegion,
        "situation_sub_region_geographical_region",
        Scopes::GeographicalRegion,
    ),
    (Scopes::SituationSubRegion, "situation_sub_region_participant", Scopes::Character),
    (
        Scopes::SituationSubRegion,
        "situation_sub_region_participant_group",
        Scopes::SituationParticipantGroup,
    ),
    (Scopes::None, "special_building_province", Scopes::Province),
    (Scopes::Activity, "special_guest", Scopes::Character),
    (Scopes::Character, "sponsored_inspiration", Scopes::Inspiration),
    (Scopes::Character, "spouse", Scopes::Character),
    (Scopes::Character, "spouse_candidate", Scopes::Character),
    (Scopes::Legend, "spread_province", Scopes::Province),
    (Scopes::Character, "stewardship_councillor", Scopes::Character),
    (Scopes::Character, "sub_realm_barony", Scopes::LandedTitle),
    (Scopes::Character, "sub_realm_county", Scopes::LandedTitle),
    (Scopes::Character, "sub_realm_duchy", Scopes::LandedTitle),
    (Scopes::Character, "sub_realm_empire", Scopes::LandedTitle),
    (Scopes::Character, "sub_realm_kingdom", Scopes::LandedTitle),
    (Scopes::Character, "sub_realm_title", Scopes::LandedTitle),
    (Scopes::Character, "succession_appointment_invested_candidate", Scopes::Character),
    (Scopes::Character, "succession_appointment_invested_title", Scopes::LandedTitle),
    (Scopes::LandedTitle, "succession_appointment_investors", Scopes::Character),
    (Scopes::CasusBelli, "target_title", Scopes::LandedTitle),
    (Scopes::Character, "targeting_faction", Scopes::Faction),
    (Scopes::Character, "targeting_scheme", Scopes::Scheme),
    (Scopes::Character, "targeting_secret", Scopes::Secret),
    (Scopes::None, "task_contract", Scopes::TaskContract),
    (Scopes::None, "task_contract_type", Scopes::TaskContractType),
    (Scopes::Character, "tax_collector", Scopes::Character),
    (Scopes::Character, "tax_collector_vassal", Scopes::Character),
    (Scopes::Character, "tax_slot", Scopes::TaxSlot),
    (Scopes::TaxSlot, "tax_slot_vassal", Scopes::Character),
    (Scopes::LandedTitle, "this_title_or_de_jure_above", Scopes::LandedTitle),
    (Scopes::LandedTitle, "title_heir", Scopes::Character),
    (Scopes::LandedTitle, "title_interested_in_location", Scopes::LandedTitle),
    (Scopes::LandedTitle, "title_joined_faction", Scopes::Faction),
    (Scopes::LandedTitle, "title_maa_regiment", Scopes::Regiment),
    (
        Scopes::LandedTitle,
        "title_to_title_neighboring_and_across_water_county",
        Scopes::LandedTitle,
    ),
    (Scopes::LandedTitle, "title_to_title_neighboring_and_across_water_duchy", Scopes::LandedTitle),
    (
        Scopes::LandedTitle,
        "title_to_title_neighboring_and_across_water_empire",
        Scopes::LandedTitle,
    ),
    (
        Scopes::LandedTitle,
        "title_to_title_neighboring_and_across_water_kingdom",
        Scopes::LandedTitle,
    ),
    (Scopes::LandedTitle, "title_to_title_neighboring_county", Scopes::LandedTitle),
    (Scopes::LandedTitle, "title_to_title_neighboring_duchy", Scopes::LandedTitle),
    (Scopes::LandedTitle, "title_to_title_neighboring_empire", Scopes::LandedTitle),
    (Scopes::LandedTitle, "title_to_title_neighboring_kingdom", Scopes::LandedTitle),
    (Scopes::Character, "top_realm_border_county", Scopes::LandedTitle),
    (Scopes::Culture, "tradition", Scopes::CultureTradition),
    (Scopes::None, "trait", Scopes::Trait),
    (Scopes::None, "trait_in_category", Scopes::Trait),
    (Scopes::Character, "traveling_family_member", Scopes::Character),
    (Scopes::Character, "tributary", Scopes::Character),
    (Scopes::Character, "truce_holder", Scopes::Character),
    (Scopes::Character, "truce_target", Scopes::Character),
    (Scopes::Character, "unassigned_taxpayers", Scopes::Character),
    (Scopes::Character, "unspent_known_secret", Scopes::Secret),
    (Scopes::Character, "vassal", Scopes::Character),
    (Scopes::None, "vassal_contract", Scopes::VassalContract),
    (Scopes::Character, "vassal_or_below", Scopes::Character),
    (Scopes::TravelPlan, "visited_location", Scopes::Province),
    (Scopes::Character, "war_ally", Scopes::Character),
    (Scopes::War, "war_attacker", Scopes::Character),
    (Scopes::War, "war_defender", Scopes::Character),
    (Scopes::Character, "war_enemy", Scopes::Character),
    (Scopes::War, "war_participant", Scopes::Character),
    (Scopes::Character, "warden_hostage", Scopes::Character),
];

pub fn iterator_removed(name: &str) -> Option<(&'static str, &'static str)> {
    for (removed_name, version, explanation) in ITERATOR_REMOVED.iter().copied() {
        if name == removed_name {
            return Some((version, explanation));
        }
    }
    None
}

/// Every entry represents a every_, ordered_, random_, and any_ version.
const ITERATOR_REMOVED: &[(&str, &str, &str)] = &[
    ("activity_declined", "1.9", ""),
    ("activity_invited", "1.9", ""),
    ("participant", "1.9", ""),
    ("scheme_agent", "1.13", "replaced with scheme_agent_character"),
    ("heir_to_title", "1.13", "was duplicate of heir_title"),
];
